{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Meta","Card","Array","prototype","avg","call","sum","Object","toString","this","reduce","pre","cur","i","length","App","options","connectTimeout","clientId","len","$chars","maxPos","pwd","charAt","Math","floor","random","randomString","username","password","useState","client","setClient","listData","setListData","mqttData","setMqttData","uniqueData","setUniqueData","SortDataArr","setSortDataArr","imgType","setImgType","FindMostNum","setFindMostNum","readyArr","setReadyArr","Avg","setAvg","isModalVisible","setIsModalVisible","wxVisible","setWxVisible","inputV","setInputV","useEffect","end","on","subscribe","qos","err","console","log","error","topic","message","JSON","parse","phone","name","num","msg","forEach","ele","unique","arr","u_key","map","Map","item","index","has","set","values","filter","className","style","marginBottom","bodyStyle","padding","align","gutter","sm","span","xs","type","onClick","arrSort","sort","a","b","findMostArr","findMost","maxName","res","maxNum","push","bigArrFilter","splice","e","publish","stringify","marginTop","fontSize","ceil","marginLeft","size","wrap","hoverable","width","height","cover","alt","src","avatar","title","description","cancelButtonProps","disabled","closable","visible","onOk","host","mqttOption","mqtt","connect","placeholder","value","onChange","v","target","onCancel","footer","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72b83f99.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\nimport mqtt from 'mqtt'\nimport {Button, Card, Avatar, Modal, Space, Row, Col, Input} from 'antd';\nimport \"antd/dist/antd.css\";\nconst { Meta } = Card;\n\nArray.prototype.avg = function (call) {\n    let type = Object.prototype.toString.call(call);\n    let sum = 0;\n    if (type === '[object Function]') {\n        sum = this.reduce((pre, cur, i) => pre + call(cur, i), 0);\n    }\n    return sum / this.length;\n};\nfunction App() {\n\n    const randomString = (len) => {\n        len = len || 32;\n        let $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';\n        let maxPos = $chars.length;\n        let pwd = '';\n        for (let i = 0; i < len; i++) {\n            pwd += $chars.charAt(Math.floor(Math.random() * maxPos));\n        }\n        return pwd;\n    }\n    const options = {\n        connectTimeout: 4000,  //超时时间\n        clientId: randomString(30),  //随机生成ID\n        username: 'wjmWeb',  //用户名\n        password: 'wjmWeb',  //密码\n    }\n    const [client, setClient] = useState(null); // mqtt client\n    const [listData, setListData] = useState([]) // 页面数据\n    const [mqttData, setMqttData] = useState({})// 页面数据\n    const [uniqueData, setUniqueData] = useState([])// 页面数据\n    const [SortDataArr, setSortDataArr] = useState([])// 页面数据\n    const [imgType, setImgType] = useState(false) // 页面 img 的展示 状态\n    const [FindMostNum, setFindMostNum] = useState({}) // 最大 出现\n    const [readyArr, setReadyArr] = useState({}) // 当前 准备 完成 的\n    const [Avg, setAvg] = useState('') // 平均数\n    const [isModalVisible, setIsModalVisible] = useState(true) // 初始房间号\n    const [wxVisible, setWxVisible] = useState(false) // 小程序二维码\n    const [inputV, setInputV] = useState('')// input 号\n\n    // 链接 mqtt\n    const mqttConnect = (host, mqttOption) => {\n        setClient(mqtt.connect(host, mqttOption));\n    };\n    // 组件卸载\n    useEffect(() => {\n        return () => {\n            client && client.end(() => {\n            });\n        }\n    }, [])\n\n    // 初始弹窗 链接 mqtt\n    const onClickBtnRoom = () => {\n        setIsModalVisible(false)\n        mqttConnect('wss://www.wjmwjh.top:5050', options)\n    }\n    // mqtt API 处理\n    useEffect(() => {\n        if (client) {\n            client.on('connect', () => {\n                // 发布房间 主题\n                client.subscribe(inputV, {qos: 0}, function (err) {\n                    console.log(\"subscribe temp topic\")\n                })\n            });\n            client.on('error', (err) => {\n                console.error('Connection error: ', err);\n                client.end();\n            });\n\n            /// 接消息\n            client.on('message', (topic, message) => {\n                const payload = {topic, message: message.toString()};\n                setMqttData(JSON.parse(message.toString()) || null)\n\n            });\n        }\n    }, [client]);\n\n    // 处理 mqtt 返回数据\n    useEffect(() => {\n        const {phone,name,num,msg} = mqttData\n        listData.forEach(ele=>{\n            if (ele.phone == phone) {\n                ele.name = name\n                ele.num = num\n                ele.msg = msg\n            }\n        })\n        if (phone) {\n            setListData([...listData,mqttData])\n        }\n    }, [mqttData])\n\n    // 处理 mqtt 返回数据\n    useEffect(() => {\n        const unique = (arr, u_key) => {\n            let map = new Map()\n            arr.forEach((item, index) => {\n                if (!map.has(item[u_key])) {\n                    map.set(item[u_key], item)\n                }\n            })\n            return [...map.values()]\n        }\n        let readyArr = unique(listData, 'phone').filter(ele=>ele.num !== 8080)\n        setReadyArr(readyArr)\n        setUniqueData(unique(listData, 'phone'))\n    }, [listData])\n\n    // 结束 出结果\n    const onClickBtn = () => {\n        setImgType(true)\n        let arrSort0 = [...uniqueData]\n        let arrSort = arrSort0.filter(ele=>ele.num !== 8080)\n        arrSort.sort(function(a,b){\n            return a.num < b.num ? 1 : -1\n        });\n        setSortDataArr(arrSort)\n        let findMostArr = []\n        arrSort.forEach(ele=>{\n            findMostArr.push(ele.num)\n        })\n        function findMost (arr) {\n            if (!arr.length) return;\n            if (arr.length === 1) return 1;\n            let res = {};\n            let maxName, maxNum = 0\n            // 遍历数组\n            arr.forEach((item) => {\n                res[item] ? res[item] += 1 : res[item]= 1\n                if (res[item] > maxNum) {\n                    maxName = item\n                    maxNum = res[item]\n                }\n            })\n            return {maxName,maxNum};\n        }\n        console.log(findMost(findMostArr));\n        setFindMostNum(findMost(findMostArr))\n        let bigArrFilter = arrSort.filter(ele=>ele.num !== 9999)\n        if (bigArrFilter.length > 3) {\n            bigArrFilter.splice(0,1)\n            bigArrFilter.splice(bigArrFilter.length-1,1)\n        }\n        console.log(bigArrFilter);\n        setAvg(bigArrFilter.avg(e => e.num))\n        uniqueData.forEach(ele=>{\n            client.publish(ele.phone, JSON.stringify({type:2}))// 结束本次评测\n        })\n    }\n\n    // 清空 房间成员 状态\n    const onClickBtnClear = () => {\n        setImgType(false)\n        setSortDataArr([])\n        uniqueData.forEach(ele=>{\n            ele.num = 0\n        })\n        setUniqueData(uniqueData)\n        uniqueData.forEach(ele=>{\n            client.publish(ele.phone, JSON.stringify({type:1}))// 清空状态\n        })\n    }\n    const wxQr = () => {\n        setWxVisible(true)\n    }\n    return (\n        <div className=\"App\">\n            {/*  头像展示 */}\n            <Card style={{ marginBottom: 20 }} bodyStyle={{ padding: '20px' }}>\n                <Row align='middle' gutter={[4, 20]}>\n                    <Col sm={{ span: 6 }} xs={{ span: 24 }}>\n                        <Button type=\"primary\" onClick={wxQr}> 小程序码 </Button>\n                    </Col>\n                    <Col sm={{ span: 6 }} xs={{ span: 24 }}>\n                        <Button type=\"primary\" onClick={onClickBtn}> 结束本次评测 </Button>\n                    </Col>\n                    <Col sm={{ span: 6 }} xs={{ span: 24 }}>\n                        <Button type=\"primary\" onClick={onClickBtnClear}> 开始新一轮评测 </Button>\n                    </Col>\n                    <Col sm={{ span: 6 }} xs={{ span: 24 }}>\n                        当前在线评测人数： { uniqueData.length } / Ready人数：{readyArr.length}\n                    </Col>\n                </Row>\n                {\n                    SortDataArr.length !== 0 &&\n                    <Row style={{ marginTop: 20 , fontSize: '30px'}} align='middle' gutter={[4, 20]}>\n                        <Col sm={{ span: 6 }} xs={{ span: 24 }}>\n                            最大值： {SortDataArr[0]&&SortDataArr[0].num === 9999 ? '∞' : SortDataArr[0]&&SortDataArr[0].num}\n                        </Col>\n                        <Col sm={{ span: 6 }} xs={{ span: 24 }}>\n                            平均值： {Avg ? Math.ceil(Avg) : '∞'}\n\n                        </Col>\n                        <Col sm={{ span: 6 }} xs={{ span: 24 }}>\n                            最小值： {SortDataArr[0]&&SortDataArr[SortDataArr.length -1].num === 9999 ? '∞' : SortDataArr[0]&&SortDataArr[SortDataArr.length -1].num }\n                        </Col>\n                        <Col sm={{ span: 6}} xs={{ span: 24 }}>\n                            次数最多 ：\n                            {\n                                FindMostNum.maxNum > 1 &&\n                                    <span>\n                                         {FindMostNum.maxName} 出现了：{FindMostNum.maxNum} 次\n                                    </span>\n                            }\n                        </Col>\n                        {\n                            SortDataArr[0]&&SortDataArr[0].num === 9999 &&\n                            <span style={{ marginLeft: '20px', fontSize: '14px' }}>无穷大未参与平均值计算</span>\n                        }\n                    </Row>\n                }\n\n            </Card>\n            <Space size={[8, 16]} wrap>\n                {\n                    uniqueData.map((ele, index) => {\n                        return (\n                            <Card\n                                key={index}\n                                hoverable={true}\n                                style={{width: 250 , height: 390}}\n                                cover={\n                                    <img\n                                        className='img'\n                                        alt=\"example\"\n                                        src={ ele.num == 8080 ? './img/Notready.jpg' : imgType ? `./img/card${ele.num === 9999 ? 'big' : ele.num}.png` : './img/cardgif.gif'}\n                                    />\n                                }\n                            >\n                                <Meta\n                                    avatar={<Avatar size={70}>{ele.name}</Avatar>}\n                                    title={`${ele.num == 8080 ? 'Not Ready' : 'Ready'}`}\n                                    description={`${ele.msg == 1?'在线':'未在线'}`}\n                                />\n                            </Card>\n                        )\n                    })\n                }\n            </Space>\n\n            <Modal  cancelButtonProps={{ disabled: true }} closable={false} title=\"请输入房间号\" visible={isModalVisible} onOk={onClickBtnRoom}>\n                <Input placeholder=\"请输入房间号\" value={inputV} onChange={(v)=>{setInputV(v.target.value)}} />\n            </Modal>\n            <Modal  onCancel={()=>{ setWxVisible(false) }} width={345} footer={null} title=\"小程序二维码\" visible={wxVisible}>\n                <img style={{width:'300px',height: '300px'}} src=\"./img/wxQrCode.jpg\" alt=\"\"/>\n                <div style={{ fontSize: '28px', marginTop: '20px', color:'red' }}>\n                    房间号：{inputV}\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}